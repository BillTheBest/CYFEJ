package Modelos;
// Generated 09-06-2013 07:53:46 PM by Hibernate Tools 3.2.1.GA

import java.util.ArrayList;
import java.util.List;
import javax.persistence.AssociationOverride;
import javax.persistence.AssociationOverrides;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Asuntojuzgado generated by hbm2java
 */
@Entity
@Table(name = "asuntojuzgado")
@AssociationOverrides({
    @AssociationOverride(name = "ids.asuntojudicial", joinColumns =
    @JoinColumn(name = "idAsuntoJudicial")),
    @AssociationOverride(name = "ids.juzgados", joinColumns =
    @JoinColumn(name = "idJuzgados"))})
public class Asuntojuzgado implements java.io.Serializable {

    private AsuntojuzgadoId ids = new AsuntojuzgadoId();
    private boolean activo;
    private List<Expediente> expedientes = new ArrayList<Expediente>();

    public Asuntojuzgado() {
    }

    @EmbeddedId
    public AsuntojuzgadoId getIds() {
        return ids;
    }

    public void setIds(AsuntojuzgadoId ids) {
        this.ids = ids;
    }
    
    @Transient
    public Asuntojudicial getAsuntojudicial(){
        return getIds().getAsuntojudicial();
    }
    
    public void setAsuntoJudicial(Asuntojudicial asuntoJudicial){
        this.getIds().setAsuntojudicial(asuntoJudicial);
    }

    @Transient
    public Juzgados getJuzgados(){
        return getIds().getJuzgados();
    }
    
    public void setJuzgados(Juzgados juzgados){
        this.getIds().setJuzgados(juzgados);
    }
    
    @Column(name = "activo", nullable = false)
    public boolean isActivo() {
        return this.activo;
    }

    public void setActivo(boolean activo) {
        this.activo = activo;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "asuntojuzgados")
    public List<Expediente> getExpedientes() {
        return expedientes;
    }

    public void setExpedientes(List<Expediente> expedientes) {
        this.expedientes = expedientes;
    }
    
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Asuntojuzgado that = (Asuntojuzgado) o;

        if (getIds() != null ? !getIds().equals(that.getIds())
                : that.getIds() != null) {
            return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        return (getIds() != null ? getIds().hashCode() : 0);
    }
}